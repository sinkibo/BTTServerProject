package com.ibm.btt.application.op;
import java.math.BigDecimal;
import java.util.Date;
import java.util.Vector;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.IndexedCollection;
import com.ibm.btt.base.KeyedCollection;
import com.ibm.btt.base.types.impl.Currency;
/** 
 * Class Generated by BTT Tool
 * Created since: 2017/12/04 14:39:54
 */
public class TransferOp extends BTTServerOperation {

  public void execute() throws Exception {
	  KeyedCollection form = (KeyedCollection) getContext().getElementAt("transferForm");
	  String fromCard = (String) form.getValueAt("fromCardId");
	  String toCard = (String) form.getValueAt("toCardId");
	  Currency amount = (Currency) form.getValueAt("amount");
	  IndexedCollection cardList = (IndexedCollection) getContext().getElementAt("cardList");
	  Currency total_balance = (Currency) getContext().getValueAt("MockData.total_balance");
	  Vector<KeyedCollection> cL = cardList.getElements();
	  
	  boolean flag = true;
	  for (KeyedCollection card : cL)
	  {
		if(card.getValueAt("card_id").equals(fromCard))
		{
			if(((Currency)card.getValueAt("balance")).getValue().floatValue() >= amount.getValue().floatValue())
			{
				card.setValueAt("balance", new Currency("USD",new BigDecimal(((Currency)card.getValueAt("balance")).getValue().floatValue() - amount.getValue().floatValue())));
				IndexedCollection history = (IndexedCollection) card.getElementAt("historyList");
				KeyedCollection event = (KeyedCollection) history.createElement(true);
				event.setValueAt("date", new Date());
				event.setValueAt("name", "Transfer");
				Currency balance = new Currency("USD", new BigDecimal(- amount.getValue().floatValue()));
				event.setValueAt("amount", balance);
				history.addElement(event);
				flag = false;
			}else{
				getContext().setValueAt("message","Balance is not engouh.");
				fireExitEvent("error");
				return;
			}
		}else if(card.getValueAt("card_id").equals(toCard)){
			card.setValueAt("balance", new Currency("USD",new BigDecimal(((Currency)card.getValueAt("balance")).getValue().floatValue() + amount.getValue().floatValue())));
			IndexedCollection history = (IndexedCollection) card.getElementAt("historyList");
			KeyedCollection event = (KeyedCollection) history.createElement(true);
			event.setValueAt("date", new Date());
			event.setValueAt("name", "Transfer");
			Currency balance = new Currency("USD", new BigDecimal(amount.getValue().floatValue()));
			event.setValueAt("amount", balance);
			history.addElement(event);
		}
	  }
	  if(flag){
		  getContext().setValueAt("message","Can't find the record of card by card id");
		  fireExitEvent("error");
		  return;
	  }
	  total_balance = new Currency("USD", new BigDecimal(total_balance.getValue().floatValue() - amount.getValue().floatValue()));
	  getContext().setValueAt("total_balance", total_balance);
	  fireExitEvent("success");
	  return;
  }
}
